"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataTablePagination = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const input_1 = require("@/atoms/input");
const pagination_1 = require("@/atoms/pagination");
const popover_1 = require("@/atoms/popover");
const select_1 = require("@/atoms/select");
const DataTablePagination = ({ state, context, pageSize, totalPages }) => {
    const { pageIndex } = state;
    const ellipsis = ((0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsxs)(popover_1.Popover, { children: [(0, jsx_runtime_1.jsx)(popover_1.PopoverTrigger, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationEllipsis, {}, void 0) }, void 0), (0, jsx_runtime_1.jsxs)(popover_1.PopoverContent, { className: "flex flex-row gap-2 items-center w-full", children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: "jump-to-page", children: "Page:" }, void 0), (0, jsx_runtime_1.jsx)(input_1.Input, { className: "w-1/4", type: "number", id: "jump-to-page", onChange: (e) => context.setPageIndex(Number(e.target.value) - 1) }, void 0)] }, void 0)] }, void 0) }, void 0));
    return ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-row items-center w-full py-2", children: [(0, jsx_runtime_1.jsx)(pagination_1.Pagination, { className: "flex-1 justify-end", children: (0, jsx_runtime_1.jsxs)(pagination_1.PaginationContent, { children: [(0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationPrevious, { href: "#", isDisabled: pageIndex === 0, onClick: () => context.previousPage() }, void 0) }, void 0), (0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", isActive: pageIndex === 0, onClick: () => context.setPageIndex(0), children: "1" }, void 0) }, void 0), pageIndex + 1 >= 1 && pageIndex + 1 <= 3 ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", isActive: pageIndex + 1 === 2, onClick: () => context.setPageIndex(1), children: "2" }, void 0) }, void 0), (0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", isActive: pageIndex + 1 === 3, onClick: () => context.setPageIndex(2), children: "3" }, void 0) }, void 0)] }, void 0)) : ellipsis, pageIndex + 1 > 3 && pageIndex + 1 < totalPages - 2 && ((0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", onClick: () => context.setPageIndex(pageIndex), isActive: true, children: pageIndex + 1 }, void 0) }, void 0)), pageIndex + 1 >= totalPages - 2 && pageIndex + 1 <= totalPages ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", onClick: () => context.setPageIndex(totalPages - 3), isActive: pageIndex + 1 === totalPages - 2, children: totalPages - 2 }, void 0) }, void 0), (0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", onClick: () => context.setPageIndex(totalPages - 2), isActive: pageIndex + 1 === totalPages - 1, children: totalPages - 1 }, void 0) }, void 0)] }, void 0)) : ellipsis, (0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationLink, { href: "#", isActive: pageIndex + 1 === totalPages, onClick: () => context.setPageIndex(totalPages - 1), children: totalPages }, void 0) }, void 0), (0, jsx_runtime_1.jsx)(pagination_1.PaginationItem, { children: (0, jsx_runtime_1.jsx)(pagination_1.PaginationNext, { onClick: () => context.nextPage() }, void 0) }, void 0)] }, void 0) }, void 0), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsxs)(select_1.Select, { onValueChange: (value) => context.setPageSize(Number(value)), children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-row items-baseline gap-2", children: [(0, jsx_runtime_1.jsx)("span", { children: "Per page:" }, void 0), (0, jsx_runtime_1.jsx)(select_1.SelectTrigger, { className: "w-[75px]", children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, { placeholder: pageSize }, void 0) }, void 0)] }, void 0), (0, jsx_runtime_1.jsxs)(select_1.SelectContent, { children: [(0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "10", children: "10" }, void 0), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "25", children: "25" }, void 0), (0, jsx_runtime_1.jsx)(select_1.SelectItem, { value: "50", children: "50" }, void 0)] }, void 0)] }, void 0) }, void 0)] }, void 0));
};
exports.DataTablePagination = DataTablePagination;
//# sourceMappingURL=data-table-pagination.js.map